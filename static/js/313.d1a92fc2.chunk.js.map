{"version":3,"file":"static/js/313.d1a92fc2.chunk.js","mappings":"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","sources":["redux/contacts/selectors.js","components/phoneBook/ContactForm/ContactForm.styled.js","components/phoneBook/ContactForm/ContactForm .jsx","components/phoneBook/ContactsList/ContactList.styled.js","components/phoneBook/ContactsList/ContactsList.jsx","components/phoneBook/Filter/Filter.styled.js","components/phoneBook/Filter/Filter.jsx","pages/Contacts.jsx"],"sourcesContent":["import { createSelector } from '@reduxjs/toolkit';\n\nexport const getFilter = state => state.contacts.filter;\n\nexport const getContacts = state => state.contacts.contacts;\nexport const getLoading = state => state.contacts.isLoading;\nexport const getError = state => state.contacts.error;\n\n// export const selectVisibleContacts = state => {\n//   const contacts = getContacts(state);\n//   const filter = getFilter(state);\n//   const visibleContacts = contacts.filter(contact =>\n//     contact.name.toLowerCase().includes(filter.toLowerCase().trim())\n//   );\n//   return visibleContacts;\n// };\n\n// оптимізація і мемоізація запиту\n\nexport const selectVisibleContacts= createSelector(\n  [getContacts, getFilter],\n  (contacts, filter) => {\n    const visibleContacts = contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase().trim())\n    );\n    return visibleContacts;\n  }\n);\n","import styled from '@emotion/styled';\n\nexport const Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  gap: 5px;\n`;\n","import { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContacts } from 'redux/contacts/operations';\nimport { getContacts } from '../../../redux/contacts/selectors';\nimport { Box, Button, TextField, Typography } from '@mui/material';\nimport AddIcon from '@mui/icons-material/Add';\n\nimport { Form } from './ContactForm.styled';\n\nexport default function ContactForm() {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const dispatch = useDispatch();\n  const allContacts = useSelector(getContacts);\n\n  function handelInputChange(event) {\n    switch (event.currentTarget.name) {\n      case 'name':\n        setName(event.currentTarget.value);\n        break;\n      case 'number':\n        setNumber(event.currentTarget.value);\n        break;\n      default:\n        return;\n    }\n  }\n\n  function reset() {\n    setName('');\n    setNumber('');\n  }\n\n  function handelSubmit(event) {\n    event.preventDefault();\n\n    const contactName = [];\n\n    for (const contact of allContacts) {\n      contactName.push(contact.name);\n    }\n\n    if (contactName.includes(name)) {\n      alert(`${name} is already in contacts list`);\n      return;\n    }\n    dispatch(addContacts({ name, number }));\n    reset();\n  }\n\n  return (\n    <Box sx={{ flexGrow: 1, maxWidth: 752 }}>\n      <Form onSubmit={handelSubmit}>\n        <Typography\n          variant=\"body\"\n          component=\"lable\"\n          color=\"primary.contrastText\"\n        >\n          Name\n        </Typography>\n\n        <TextField\n          label=\"name\"\n          variant=\"outlined\"\n          autoComplete=\"off\"\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          onChange={handelInputChange}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n\n        <Typography\n          variant=\"body\"\n          component=\"lable\"\n          color=\"primary.contrastText\"\n        >\n          Number\n        </Typography>\n        <TextField\n          label=\"number\"\n          variant=\"outlined\"\n          type=\"tel\"\n          name=\"number\"\n          value={number}\n          onChange={handelInputChange}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n\n        <label>\n          <Button variant=\"contained\" startIcon={<AddIcon />} type=\"submit\">\n            Add contact\n          </Button>\n        </label>\n      </Form>\n    </Box>\n  );\n}\n","import styled from '@emotion/styled';\nimport { ListItem } from '@mui/material';\n\nexport const Item = styled(ListItem)`\n  :hover {\n    background-color: #90a955;\n    border-radius: 8px;\n  }\n`;\n","import React from 'react';\n\nimport { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { deleteContacts } from 'redux/contacts/operations';\nimport {\n  getLoading,\n  getError,\n  selectVisibleContacts,\n} from '../../../redux/contacts/selectors';\nimport { fetchContacts } from '../../../redux/contacts/operations';\n\nimport {\n  Box,\n  Grid,\n  Typography,\n  List,\n  IconButton,\n  ListItemText,\n  Avatar,\n  ListItemAvatar,\n} from '@mui/material';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport { Item } from './ContactList.styled';\n\nexport const ContactsList = () => {\n  const contacts = useSelector(selectVisibleContacts);\n  const isLoading = useSelector(getLoading);\n  const error = useSelector(getError);\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <Box sx={{ flexGrow: 1, maxWidth: 752 }}>\n      <Grid>\n        <Typography variant=\"h4\" component=\"h2\">\n          {' '}\n          My contacts\n        </Typography>\n        {isLoading && !error && <b>Request in progress...</b>}\n        <List>\n          {contacts.map(contact => (\n            <Item\n              key={contact.id}\n              secondaryAction={\n                <IconButton\n                  edge=\"end\"\n                  aria-label=\"delete\"\n                  onClick={() => dispatch(deleteContacts(contact.id))}\n                >\n                  <DeleteIcon />\n                </IconButton>\n              }\n            >\n              <ListItemAvatar>\n                <Avatar />\n              </ListItemAvatar>\n              <ListItemText\n                primary={\n                  //   <React.Fragment>\n                  <Typography component=\"p\" variant=\"h6\">\n                    {contact.name}: {contact.number}\n                  </Typography>\n                  //   </React.Fragment>\n                }\n              />\n            </Item>\n          ))}\n        </List>\n      </Grid>\n    </Box>\n  );\n};\n","import styled from '@emotion/styled';\n\nimport { Box } from '@mui/material';\n\nexport const FilterForm = styled(Box)`\n  display: flex;\n  align-items: center;\n  gap: 5px;\n  margin-top: 20px;\n  margin-bottom: 20px;\n`;\n","import { FilterForm } from './Filter.styled';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport { filterContacts } from '../../../redux/contacts/contactsSlice';\nimport { getFilter } from 'redux/contacts/selectors';\n\nimport { TextField, Typography } from '@mui/material';\n\nexport const Filter = () => {\n  const filter = useSelector(getFilter);\n  const dispatch = useDispatch();\n\n  function filterName(event) {\n    dispatch(filterContacts(event.currentTarget.value));\n  }\n\n  return (\n    <FilterForm sx={{ flexGrow: 1, maxWidth: 752 }}>\n      <Typography variant=\"body\" component=\"lable\" color=\"primary.contrastText\">\n        Find a contact\n      </Typography>\n      <TextField\n        label=\"name\"\n        variant=\"outlined\"\n        type=\"text\"\n        value={filter}\n        onChange={filterName}\n      />\n    </FilterForm>\n  );\n};\n","import ContactForm from '../components/phoneBook/ContactForm/ContactForm ';\nimport { ContactsList } from '../components/phoneBook/ContactsList/ContactsList';\nimport { Filter } from '../components/phoneBook/Filter/Filter';\nimport { Container } from '@mui/material';\n\nconst ContactsPage=()=> {\n  return (\n    <Container sx={{mt:{ xs: '5px', sm: '20px' } }}>\n      <ContactForm />\n      <Filter />\n      <ContactsList />\n    </Container>\n  );\n}\nexport default ContactsPage;\n"],"names":["getFilter","state","contacts","filter","getContacts","getLoading","isLoading","getError","error","selectVisibleContacts","createSelector","contact","name","toLowerCase","includes","trim","Form","styled","ContactForm","useState","setName","number","setNumber","dispatch","useDispatch","allContacts","useSelector","handelInputChange","event","currentTarget","value","Box","sx","flexGrow","maxWidth","onSubmit","preventDefault","contactName","push","alert","addContacts","Typography","variant","component","color","TextField","label","autoComplete","type","onChange","pattern","title","required","Button","startIcon","Add","Item","ListItem","ContactsList","useEffect","fetchContacts","Grid","List","map","secondaryAction","IconButton","edge","onClick","deleteContacts","id","Delete","ListItemAvatar","Avatar","ListItemText","primary","FilterForm","Filter","filterContacts","Container","mt","xs","sm"],"sourceRoot":""}